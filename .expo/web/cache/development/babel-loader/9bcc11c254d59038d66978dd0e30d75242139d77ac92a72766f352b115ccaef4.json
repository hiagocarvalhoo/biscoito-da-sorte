{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ExponentAV from \"./ExponentAV\";\nimport { requestFullscreen, exitFullscreen } from \"./FullscreenUtils.web\";\nexport default {\n  get name() {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone() {\n    return 'none';\n  },\n  get ScaleToFill() {\n    return 'fill';\n  },\n  get ScaleAspectFit() {\n    return 'contain';\n  },\n  get ScaleAspectFill() {\n    return 'cover';\n  },\n  setFullscreen: function setFullscreen(element, isFullScreenEnabled) {\n    return function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!isFullScreenEnabled) {\n              _context.next = 5;\n              break;\n            }\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(requestFullscreen(element));\n          case 3:\n            _context.next = 7;\n            break;\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(exitFullscreen(element));\n          case 7:\n            return _context.abrupt(\"return\", ExponentAV.getStatusForVideo(element));\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};","map":{"version":3,"names":["ExponentAV","requestFullscreen","exitFullscreen","name","ScaleNone","ScaleToFill","ScaleAspectFit","ScaleAspectFill","setFullscreen","element","isFullScreenEnabled","_callee","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","abrupt","getStatusForVideo","stop","Promise"],"sources":["C:\\Users\\Pc02\\Desktop\\Biscoito\\biscoito-da-sorte\\node_modules\\expo-av\\src\\ExpoVideoManager.web.ts"],"sourcesContent":["import { AVPlaybackStatus } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { requestFullscreen, exitFullscreen } from './FullscreenUtils.web';\n\nexport default {\n  get name(): string {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone(): string {\n    return 'none';\n  },\n  get ScaleToFill(): string {\n    return 'fill';\n  },\n  get ScaleAspectFit(): string {\n    return 'contain';\n  },\n  get ScaleAspectFill(): string {\n    return 'cover';\n  },\n\n  async setFullscreen(\n    element: HTMLMediaElement,\n    isFullScreenEnabled: boolean\n  ): Promise<AVPlaybackStatus> {\n    if (isFullScreenEnabled) {\n      await requestFullscreen(element);\n    } else {\n      await exitFullscreen(element);\n    }\n    return ExponentAV.getStatusForVideo(element);\n  },\n};\n"],"mappings":";AACA,OAAOA,UAAU;AACjB,SAASC,iBAAiB,EAAEC,cAAc;AAE1C,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,kBAAkB;EAC3B,CAAC;EACD,IAAIC,SAASA,CAAA;IACX,OAAO,MAAM;EACf,CAAC;EACD,IAAIC,WAAWA,CAAA;IACb,OAAO,MAAM;EACf,CAAC;EACD,IAAIC,cAAcA,CAAA;IAChB,OAAO,SAAS;EAClB,CAAC;EACD,IAAIC,eAAeA,CAAA;IACjB,OAAO,OAAO;EAChB,CAAC;EAEKC,aAAa,WAAAA,cACjBC,OAAyB,EACzBC,mBAA4B;IAAA,gBAAAC,QAAA;MAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAA,KAExBP,mBAAmB;cAAAK,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CACfjB,iBAAiB,CAACQ,OAAO,CAAC;UAAA;YAAAM,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CAE1BhB,cAAc,CAACO,OAAO,CAAC;UAAA;YAAA,OAAAM,QAAA,CAAAI,MAAA,WAExBnB,UAAU,CAACoB,iBAAiB,CAACX,OAAO,CAAC;UAAA;UAAA;YAAA,OAAAM,QAAA,CAAAM,IAAA;QAAA;MAAA,qBAAAC,OAAA;IAAA;EAC9C;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}