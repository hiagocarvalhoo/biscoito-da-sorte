{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ExponentAV from \"../ExponentAV\";\nvar _enabled = true;\nexport function isAudioEnabled() {\n  return _enabled;\n}\nexport function throwIfAudioIsDisabled() {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\nexport function setIsEnabledAsync(value) {\n  return _regeneratorRuntime.async(function setIsEnabledAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _enabled = value;\n        _context.next = 3;\n        return _regeneratorRuntime.awrap(ExponentAV.setAudioIsEnabled(value));\n      case 3:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["ExponentAV","_enabled","isAudioEnabled","throwIfAudioIsDisabled","Error","setIsEnabledAsync","value","_regeneratorRuntime","async","setIsEnabledAsync$","_context","prev","next","awrap","setAudioIsEnabled","stop","Promise"],"sources":["C:\\Users\\Pc02\\Desktop\\Biscoito\\biscoito-da-sorte\\node_modules\\expo-av\\src\\Audio\\AudioAvailability.ts"],"sourcesContent":["import ExponentAV from '../ExponentAV';\n\nlet _enabled = true;\n\nexport function isAudioEnabled(): boolean {\n  return _enabled;\n}\n\nexport function throwIfAudioIsDisabled(): void {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\n\nexport async function setIsEnabledAsync(value: boolean): Promise<void> {\n  _enabled = value;\n  await ExponentAV.setAudioIsEnabled(value);\n  // TODO : We immediately pause all players when disabled, but we do not resume all shouldPlay\n  // players when enabled. Perhaps for completeness we should allow this; the design of the\n  // enabling API is for people to enable / disable this audio library, but I think that it should\n  // intuitively also double as a global pause/resume.\n}\n"],"mappings":";AAAA,OAAOA,UAAU;AAEjB,IAAIC,QAAQ,GAAG,IAAI;AAEnB,OAAM,SAAUC,cAAcA,CAAA;EAC5B,OAAOD,QAAQ;AACjB;AAEA,OAAM,SAAUE,sBAAsBA,CAAA;EACpC,IAAI,CAACF,QAAQ,EAAE;IACb,MAAM,IAAIG,KAAK,CAAC,yDAAyD,CAAC;;AAE9E;AAEA,OAAO,SAAeC,iBAAiBA,CAACC,KAAc;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,mBAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QACpDX,QAAQ,GAAGK,KAAK;QAACI,QAAA,CAAAE,IAAA;QAAA,OAAAL,mBAAA,CAAAM,KAAA,CACXb,UAAU,CAACc,iBAAiB,CAACR,KAAK,CAAC;MAAA;MAAA;QAAA,OAAAI,QAAA,CAAAK,IAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}