{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { Asset } from 'expo-asset';\nimport { Platform } from 'expo-modules-core';\nimport { PitchCorrectionQuality } from \"./AV.types\";\nexport var _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = 500;\nexport var _DEFAULT_INITIAL_PLAYBACK_STATUS = {\n  positionMillis: 0,\n  progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n  shouldPlay: false,\n  rate: 1.0,\n  shouldCorrectPitch: false,\n  volume: 1.0,\n  isMuted: false,\n  isLooping: false\n};\nexport function getNativeSourceFromSource(source) {\n  var uri = null;\n  var overridingExtension = null;\n  var headers;\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      uri: source,\n      overridingExtension: overridingExtension,\n      headers: headers\n    };\n  }\n  var asset = _getAssetFromPlaybackSource(source);\n  if (asset != null) {\n    uri = asset.localUri || asset.uri;\n  } else if (source != null && typeof source !== 'number' && 'uri' in source && typeof source.uri === 'string') {\n    uri = source.uri;\n  }\n  if (uri == null) {\n    return null;\n  }\n  if (source != null && typeof source !== 'number' && 'overrideFileExtensionAndroid' in source && typeof source.overrideFileExtensionAndroid === 'string') {\n    overridingExtension = source.overrideFileExtensionAndroid;\n  }\n  if (source != null && typeof source !== 'number' && 'headers' in source && typeof source.headers === 'object') {\n    headers = source.headers;\n  }\n  return {\n    uri: uri,\n    overridingExtension: overridingExtension,\n    headers: headers\n  };\n}\nfunction _getAssetFromPlaybackSource(source) {\n  if (source == null) {\n    return null;\n  }\n  var asset = null;\n  if (typeof source === 'number') {\n    asset = Asset.fromModule(source);\n  } else if (source instanceof Asset) {\n    asset = source;\n  }\n  return asset;\n}\nexport function assertStatusValuesInBounds(status) {\n  if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n    throw new RangeError('Rate value must be between 0.0 and 32.0');\n  }\n  if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n    throw new RangeError('Volume value must be between 0.0 and 1.0');\n  }\n}\nexport function getNativeSourceAndFullInitialStatusForLoadAsync(source, initialStatus, downloadFirst) {\n  var fullInitialStatus, asset, nativeSource;\n  return _regeneratorRuntime.async(function getNativeSourceAndFullInitialStatusForLoadAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        fullInitialStatus = initialStatus == null ? _DEFAULT_INITIAL_PLAYBACK_STATUS : _objectSpread(_objectSpread({}, _DEFAULT_INITIAL_PLAYBACK_STATUS), initialStatus);\n        assertStatusValuesInBounds(fullInitialStatus);\n        if (!(typeof source === 'string' && Platform.OS === 'web')) {\n          _context.next = 4;\n          break;\n        }\n        return _context.abrupt(\"return\", {\n          nativeSource: {\n            uri: source,\n            overridingExtension: null\n          },\n          fullInitialStatus: fullInitialStatus\n        });\n      case 4:\n        asset = _getAssetFromPlaybackSource(source);\n        if (!(downloadFirst && asset)) {\n          _context.next = 8;\n          break;\n        }\n        _context.next = 8;\n        return _regeneratorRuntime.awrap(asset.downloadAsync());\n      case 8:\n        nativeSource = getNativeSourceFromSource(source);\n        if (!(nativeSource === null)) {\n          _context.next = 11;\n          break;\n        }\n        throw new Error(\"Cannot load an AV asset from a null playback source\");\n      case 11:\n        if (asset && asset.localUri) {\n          nativeSource.uri = asset.localUri;\n        }\n        return _context.abrupt(\"return\", {\n          nativeSource: nativeSource,\n          fullInitialStatus: fullInitialStatus\n        });\n      case 13:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function getUnloadedStatus() {\n  var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return _objectSpread({\n    isLoaded: false\n  }, error ? {\n    error: error\n  } : null);\n}\nexport var PlaybackMixin = {\n  playAsync: function playAsync() {\n    var _this = this;\n    return function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", _this.setStatusAsync({\n              shouldPlay: true\n            }));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  playFromPositionAsync: function playFromPositionAsync(positionMillis) {\n    var _this2 = this;\n    var tolerances = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", _this2.setStatusAsync({\n              positionMillis: positionMillis,\n              shouldPlay: true,\n              seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n              seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n            }));\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  pauseAsync: function pauseAsync() {\n    var _this3 = this;\n    return function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", _this3.setStatusAsync({\n              shouldPlay: false\n            }));\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  stopAsync: function stopAsync() {\n    var _this4 = this;\n    return function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", _this4.setStatusAsync({\n              positionMillis: 0,\n              shouldPlay: false\n            }));\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setPositionAsync: function setPositionAsync(positionMillis) {\n    var _this5 = this;\n    var tolerances = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return function _callee5() {\n      return _regeneratorRuntime.async(function _callee5$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", _this5.setStatusAsync({\n              positionMillis: positionMillis,\n              seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n              seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n            }));\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setRateAsync: function setRateAsync(rate) {\n    var _this6 = this;\n    var shouldCorrectPitch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var pitchCorrectionQuality = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : PitchCorrectionQuality.Low;\n    return function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", _this6.setStatusAsync({\n              rate: rate,\n              shouldCorrectPitch: shouldCorrectPitch,\n              pitchCorrectionQuality: pitchCorrectionQuality\n            }));\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setVolumeAsync: function setVolumeAsync(volume) {\n    var _this7 = this;\n    return function _callee7() {\n      return _regeneratorRuntime.async(function _callee7$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", _this7.setStatusAsync({\n              volume: volume\n            }));\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setIsMutedAsync: function setIsMutedAsync(isMuted) {\n    var _this8 = this;\n    return function _callee8() {\n      return _regeneratorRuntime.async(function _callee8$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            return _context9.abrupt(\"return\", _this8.setStatusAsync({\n              isMuted: isMuted\n            }));\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setIsLoopingAsync: function setIsLoopingAsync(isLooping) {\n    var _this9 = this;\n    return function _callee9() {\n      return _regeneratorRuntime.async(function _callee9$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            return _context10.abrupt(\"return\", _this9.setStatusAsync({\n              isLooping: isLooping\n            }));\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setProgressUpdateIntervalAsync: function setProgressUpdateIntervalAsync(progressUpdateIntervalMillis) {\n    var _this10 = this;\n    return function _callee10() {\n      return _regeneratorRuntime.async(function _callee10$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            return _context11.abrupt(\"return\", _this10.setStatusAsync({\n              progressUpdateIntervalMillis: progressUpdateIntervalMillis\n            }));\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};\nexport * from \"./AV.types\";","map":{"version":3,"names":["Asset","Platform","PitchCorrectionQuality","_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS","_DEFAULT_INITIAL_PLAYBACK_STATUS","positionMillis","progressUpdateIntervalMillis","shouldPlay","rate","shouldCorrectPitch","volume","isMuted","isLooping","getNativeSourceFromSource","source","uri","overridingExtension","headers","OS","asset","_getAssetFromPlaybackSource","localUri","overrideFileExtensionAndroid","fromModule","assertStatusValuesInBounds","status","RangeError","getNativeSourceAndFullInitialStatusForLoadAsync","initialStatus","downloadFirst","fullInitialStatus","nativeSource","_regeneratorRuntime","async","getNativeSourceAndFullInitialStatusForLoadAsync$","_context","prev","next","_objectSpread","abrupt","awrap","downloadAsync","Error","stop","Promise","getUnloadedStatus","error","arguments","length","undefined","isLoaded","PlaybackMixin","playAsync","_this","_callee","_callee$","_context2","setStatusAsync","playFromPositionAsync","_this2","tolerances","_callee2","_callee2$","_context3","seekMillisToleranceAfter","toleranceMillisAfter","seekMillisToleranceBefore","toleranceMillisBefore","pauseAsync","_this3","_callee3","_callee3$","_context4","stopAsync","_this4","_callee4","_callee4$","_context5","setPositionAsync","_this5","_callee5","_callee5$","_context6","setRateAsync","_this6","pitchCorrectionQuality","Low","_callee6","_callee6$","_context7","setVolumeAsync","_this7","_callee7","_callee7$","_context8","setIsMutedAsync","_this8","_callee8","_callee8$","_context9","setIsLoopingAsync","_this9","_callee9","_callee9$","_context10","setProgressUpdateIntervalAsync","_this10","_callee10","_callee10$","_context11"],"sources":["C:\\Users\\Pc02\\Desktop\\Biscoito\\biscoito-da-sorte\\node_modules\\expo-av\\src\\AV.ts"],"sourcesContent":["import { Asset } from 'expo-asset';\nimport { Platform } from 'expo-modules-core';\n\nimport {\n  AVPlaybackSource,\n  AVPlaybackNativeSource,\n  AVPlaybackStatus,\n  AVPlaybackStatusToSet,\n  PitchCorrectionQuality,\n  AVPlaybackTolerance,\n} from './AV.types';\n\n// TODO add:\n//  disableFocusOnAndroid\n//  audio routes (at least did become noisy on android)\n//  pan\n//  pitch\n//  API to explicitly request audio focus / session\n//  API to select stream type on Android\n//  subtitles API\n\nexport const _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS: number = 500;\nexport const _DEFAULT_INITIAL_PLAYBACK_STATUS: AVPlaybackStatusToSet = {\n  positionMillis: 0,\n  progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n  shouldPlay: false,\n  rate: 1.0,\n  shouldCorrectPitch: false,\n  volume: 1.0,\n  isMuted: false,\n  isLooping: false,\n};\n\nexport function getNativeSourceFromSource(\n  source?: AVPlaybackSource | null\n): AVPlaybackNativeSource | null {\n  let uri: string | null = null;\n  let overridingExtension: string | null = null;\n  let headers: AVPlaybackNativeSource['headers'];\n\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      uri: source,\n      overridingExtension,\n      headers,\n    };\n  }\n\n  const asset: Asset | null = _getAssetFromPlaybackSource(source);\n  if (asset != null) {\n    uri = asset.localUri || asset.uri;\n  } else if (\n    source != null &&\n    typeof source !== 'number' &&\n    'uri' in source &&\n    typeof source.uri === 'string'\n  ) {\n    uri = source.uri;\n  }\n\n  if (uri == null) {\n    return null;\n  }\n\n  if (\n    source != null &&\n    typeof source !== 'number' &&\n    'overrideFileExtensionAndroid' in source &&\n    typeof source.overrideFileExtensionAndroid === 'string'\n  ) {\n    overridingExtension = source.overrideFileExtensionAndroid;\n  }\n\n  if (\n    source != null &&\n    typeof source !== 'number' &&\n    'headers' in source &&\n    typeof source.headers === 'object'\n  ) {\n    headers = source.headers;\n  }\n  return { uri, overridingExtension, headers };\n}\n\nfunction _getAssetFromPlaybackSource(source?: AVPlaybackSource | null): Asset | null {\n  if (source == null) {\n    return null;\n  }\n\n  let asset: Asset | null = null;\n  if (typeof source === 'number') {\n    asset = Asset.fromModule(source);\n  } else if (source instanceof Asset) {\n    asset = source;\n  }\n  return asset;\n}\n\nexport function assertStatusValuesInBounds(status: AVPlaybackStatusToSet): void {\n  if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n    throw new RangeError('Rate value must be between 0.0 and 32.0');\n  }\n  if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n    throw new RangeError('Volume value must be between 0.0 and 1.0');\n  }\n}\n\nexport async function getNativeSourceAndFullInitialStatusForLoadAsync(\n  source: AVPlaybackSource | null,\n  initialStatus: AVPlaybackStatusToSet | null,\n  downloadFirst: boolean\n): Promise<{\n  nativeSource: AVPlaybackNativeSource;\n  fullInitialStatus: AVPlaybackStatusToSet;\n}> {\n  // Get the full initial status\n  const fullInitialStatus: AVPlaybackStatusToSet =\n    initialStatus == null\n      ? _DEFAULT_INITIAL_PLAYBACK_STATUS\n      : {\n          ..._DEFAULT_INITIAL_PLAYBACK_STATUS,\n          ...initialStatus,\n        };\n  assertStatusValuesInBounds(fullInitialStatus);\n\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      nativeSource: {\n        uri: source,\n        overridingExtension: null,\n      },\n      fullInitialStatus,\n    };\n  }\n\n  // Download first if necessary.\n  const asset = _getAssetFromPlaybackSource(source);\n  if (downloadFirst && asset) {\n    // TODO we can download remote uri too once @nikki93 has integrated this into Asset\n    await asset.downloadAsync();\n  }\n\n  // Get the native source\n  const nativeSource: AVPlaybackNativeSource | null = getNativeSourceFromSource(source);\n\n  if (nativeSource === null) {\n    throw new Error(`Cannot load an AV asset from a null playback source`);\n  }\n\n  // If asset has been downloaded use the localUri\n  if (asset && asset.localUri) {\n    nativeSource.uri = asset.localUri;\n  }\n\n  return { nativeSource, fullInitialStatus };\n}\n\nexport function getUnloadedStatus(error: string | null = null): AVPlaybackStatus {\n  return {\n    isLoaded: false,\n    ...(error ? { error } : null),\n  };\n}\n\nexport interface AV {\n  setStatusAsync(status: AVPlaybackStatusToSet): Promise<AVPlaybackStatus>;\n  getStatusAsync(): Promise<AVPlaybackStatus>;\n}\n\nexport interface Playback extends AV {\n  playAsync(): Promise<AVPlaybackStatus>;\n  loadAsync(\n    source: AVPlaybackSource,\n    initialStatus: AVPlaybackStatusToSet,\n    downloadAsync: boolean\n  ): Promise<AVPlaybackStatus>;\n  unloadAsync(): Promise<AVPlaybackStatus>;\n  playFromPositionAsync(\n    positionMillis: number,\n    tolerances?: AVPlaybackTolerance\n  ): Promise<AVPlaybackStatus>;\n  pauseAsync(): Promise<AVPlaybackStatus>;\n  stopAsync(): Promise<AVPlaybackStatus>;\n  replayAsync(status: AVPlaybackStatusToSet): Promise<AVPlaybackStatus>;\n  setPositionAsync(\n    positionMillis: number,\n    tolerances?: AVPlaybackTolerance\n  ): Promise<AVPlaybackStatus>;\n  setRateAsync(\n    rate: number,\n    shouldCorrectPitch: boolean,\n    pitchCorrectionQuality?: PitchCorrectionQuality\n  ): Promise<AVPlaybackStatus>;\n  setVolumeAsync(volume: number): Promise<AVPlaybackStatus>;\n  setIsMutedAsync(isMuted: boolean): Promise<AVPlaybackStatus>;\n  setIsLoopingAsync(isLooping: boolean): Promise<AVPlaybackStatus>;\n  setProgressUpdateIntervalAsync(progressUpdateIntervalMillis: number): Promise<AVPlaybackStatus>;\n}\n\n/**\n * A mixin that defines common playback methods for A/V classes so they implement the `Playback`\n * interface\n */\nexport const PlaybackMixin = {\n  async playAsync(): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ shouldPlay: true });\n  },\n\n  async playFromPositionAsync(\n    positionMillis: number,\n    tolerances: AVPlaybackTolerance = {}\n  ): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({\n      positionMillis,\n      shouldPlay: true,\n      seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n      seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n    });\n  },\n\n  async pauseAsync(): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ shouldPlay: false });\n  },\n\n  async stopAsync(): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ positionMillis: 0, shouldPlay: false });\n  },\n\n  async setPositionAsync(\n    positionMillis: number,\n    tolerances: AVPlaybackTolerance = {}\n  ): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({\n      positionMillis,\n      seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n      seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n    });\n  },\n\n  async setRateAsync(\n    rate: number,\n    shouldCorrectPitch: boolean = false,\n    pitchCorrectionQuality: PitchCorrectionQuality = PitchCorrectionQuality.Low\n  ): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({\n      rate,\n      shouldCorrectPitch,\n      pitchCorrectionQuality,\n    });\n  },\n\n  async setVolumeAsync(volume: number): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ volume });\n  },\n\n  async setIsMutedAsync(isMuted: boolean): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ isMuted });\n  },\n\n  async setIsLoopingAsync(isLooping: boolean): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ isLooping });\n  },\n\n  async setProgressUpdateIntervalAsync(\n    progressUpdateIntervalMillis: number\n  ): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ progressUpdateIntervalMillis });\n  },\n};\n\nexport * from './AV.types';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}