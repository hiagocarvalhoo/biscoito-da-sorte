{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"uri\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { PermissionStatus, SyntheticPlatformEmitter } from 'expo-modules-core';\nimport { RECORDING_OPTIONS_PRESET_HIGH_QUALITY } from \"./Audio/RecordingConstants\";\nfunction getPermissionWithQueryAsync(name) {\n  var _await$navigator$perm, state;\n  return _regeneratorRuntime.async(function getPermissionWithQueryAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        if (!(!navigator || !navigator.permissions || !navigator.permissions.query)) {\n          _context.next = 2;\n          break;\n        }\n        return _context.abrupt(\"return\", null);\n      case 2:\n        _context.prev = 2;\n        _context.next = 5;\n        return _regeneratorRuntime.awrap(navigator.permissions.query({\n          name: name\n        }));\n      case 5:\n        _await$navigator$perm = _context.sent;\n        state = _await$navigator$perm.state;\n        _context.t0 = state;\n        _context.next = _context.t0 === 'granted' ? 10 : _context.t0 === 'denied' ? 11 : 12;\n        break;\n      case 10:\n        return _context.abrupt(\"return\", PermissionStatus.GRANTED);\n      case 11:\n        return _context.abrupt(\"return\", PermissionStatus.DENIED);\n      case 12:\n        return _context.abrupt(\"return\", PermissionStatus.UNDETERMINED);\n      case 13:\n        _context.next = 18;\n        break;\n      case 15:\n        _context.prev = 15;\n        _context.t1 = _context[\"catch\"](2);\n        return _context.abrupt(\"return\", PermissionStatus.UNDETERMINED);\n      case 18:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, [[2, 15]], Promise);\n}\nfunction getUserMedia(constraints) {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || function () {\n    var error = new Error('Permission unimplemented');\n    error.code = 0;\n    error.name = 'NotAllowedError';\n    throw error;\n  };\n  return new Promise(function (resolve, reject) {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\nfunction getStatusFromMedia(media) {\n  if (!media) {\n    return {\n      isLoaded: false,\n      error: undefined\n    };\n  }\n  var isPlaying = !!(media.currentTime > 0 && !media.paused && !media.ended && media.readyState > 2);\n  var status = {\n    isLoaded: true,\n    uri: media.src,\n    progressUpdateIntervalMillis: 100,\n    durationMillis: media.duration * 1000,\n    positionMillis: media.currentTime * 1000,\n    shouldPlay: media.autoplay,\n    isPlaying: isPlaying,\n    isBuffering: false,\n    rate: media.playbackRate,\n    shouldCorrectPitch: false,\n    volume: media.volume,\n    isMuted: media.muted,\n    isLooping: media.loop,\n    didJustFinish: media.ended\n  };\n  return status;\n}\nfunction setStatusForMedia(media, status) {\n  if (status.positionMillis !== undefined) {\n    media.currentTime = status.positionMillis / 1000;\n  }\n  if (status.shouldPlay !== undefined) {\n    if (status.shouldPlay) {\n      media.play();\n    } else {\n      media.pause();\n    }\n  }\n  if (status.rate !== undefined) {\n    media.playbackRate = status.rate;\n  }\n  if (status.volume !== undefined) {\n    media.volume = status.volume;\n  }\n  if (status.isMuted !== undefined) {\n    media.muted = status.isMuted;\n  }\n  if (status.isLooping !== undefined) {\n    media.loop = status.isLooping;\n  }\n  return getStatusFromMedia(media);\n}\nvar mediaRecorder = null;\nvar mediaRecorderUptimeOfLastStartResume = 0;\nvar mediaRecorderDurationAlreadyRecorded = 0;\nvar mediaRecorderIsRecording = false;\nfunction getAudioRecorderDurationMillis() {\n  var duration = mediaRecorderDurationAlreadyRecorded;\n  if (mediaRecorderIsRecording && mediaRecorderUptimeOfLastStartResume > 0) {\n    duration += Date.now() - mediaRecorderUptimeOfLastStartResume;\n  }\n  return duration;\n}\nexport default {\n  get name() {\n    return 'ExponentAV';\n  },\n  getStatusForVideo: function getStatusForVideo(element) {\n    return function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  loadForVideo: function loadForVideo(element, nativeSource, fullInitialStatus) {\n    return function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  unloadForVideo: function unloadForVideo(element) {\n    return function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setStatusForVideo: function setStatusForVideo(element, status) {\n    return function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  replayVideo: function replayVideo(element, status) {\n    return function _callee5() {\n      return _regeneratorRuntime.async(function _callee5$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setAudioMode: function setAudioMode() {\n    return function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setAudioIsEnabled: function setAudioIsEnabled() {\n    return function _callee7() {\n      return _regeneratorRuntime.async(function _callee7$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getStatusForSound: function getStatusForSound(element) {\n    return function _callee8() {\n      return _regeneratorRuntime.async(function _callee8$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            return _context9.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  loadForSound: function loadForSound(nativeSource, fullInitialStatus) {\n    return function _callee9() {\n      var source, media, status;\n      return _regeneratorRuntime.async(function _callee9$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            source = typeof nativeSource === 'string' ? nativeSource : nativeSource.uri;\n            media = new Audio(source);\n            media.ontimeupdate = function () {\n              SyntheticPlatformEmitter.emit('didUpdatePlaybackStatus', {\n                key: media,\n                status: getStatusFromMedia(media)\n              });\n            };\n            media.onerror = function () {\n              SyntheticPlatformEmitter.emit('ExponentAV.onError', {\n                key: media,\n                error: media.error.message\n              });\n            };\n            status = setStatusForMedia(media, fullInitialStatus);\n            return _context10.abrupt(\"return\", [media, status]);\n          case 6:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  unloadForSound: function unloadForSound(element) {\n    return function _callee10() {\n      return _regeneratorRuntime.async(function _callee10$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            element.pause();\n            element.removeAttribute('src');\n            element.load();\n            return _context11.abrupt(\"return\", getStatusFromMedia(element));\n          case 4:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setStatusForSound: function setStatusForSound(element, status) {\n    return function _callee11() {\n      return _regeneratorRuntime.async(function _callee11$(_context12) {\n        while (1) switch (_context12.prev = _context12.next) {\n          case 0:\n            return _context12.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context12.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  replaySound: function replaySound(element, status) {\n    return function _callee12() {\n      return _regeneratorRuntime.async(function _callee12$(_context13) {\n        while (1) switch (_context13.prev = _context13.next) {\n          case 0:\n            return _context13.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getAudioRecordingStatus: function getAudioRecordingStatus() {\n    return function _callee13(_mediaRecorder, _mediaRecorder2, _mediaRecorder3) {\n      return _regeneratorRuntime.async(function _callee13$(_context14) {\n        while (1) switch (_context14.prev = _context14.next) {\n          case 0:\n            return _context14.abrupt(\"return\", {\n              canRecord: ((_mediaRecorder = mediaRecorder) == null ? void 0 : _mediaRecorder.state) === 'recording' || ((_mediaRecorder2 = mediaRecorder) == null ? void 0 : _mediaRecorder2.state) === 'inactive',\n              isRecording: ((_mediaRecorder3 = mediaRecorder) == null ? void 0 : _mediaRecorder3.state) === 'recording',\n              isDoneRecording: false,\n              durationMillis: getAudioRecorderDurationMillis(),\n              uri: null\n            });\n          case 1:\n          case \"end\":\n            return _context14.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  prepareAudioRecorder: function prepareAudioRecorder(options) {\n    var _this = this;\n    return function _callee14() {\n      var stream, _await$_this$getAudio, uri, status;\n      return _regeneratorRuntime.async(function _callee14$(_context15) {\n        while (1) switch (_context15.prev = _context15.next) {\n          case 0:\n            if (!(typeof navigator !== 'undefined' && !navigator.mediaDevices)) {\n              _context15.next = 2;\n              break;\n            }\n            throw new Error('No media devices available');\n          case 2:\n            mediaRecorderUptimeOfLastStartResume = 0;\n            mediaRecorderDurationAlreadyRecorded = 0;\n            _context15.next = 6;\n            return _regeneratorRuntime.awrap(getUserMedia({\n              audio: true\n            }));\n          case 6:\n            stream = _context15.sent;\n            mediaRecorder = new window.MediaRecorder(stream, (options == null ? void 0 : options.web) || RECORDING_OPTIONS_PRESET_HIGH_QUALITY.web);\n            mediaRecorder.addEventListener('pause', function () {\n              mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n              mediaRecorderIsRecording = false;\n            });\n            mediaRecorder.addEventListener('resume', function () {\n              mediaRecorderUptimeOfLastStartResume = Date.now();\n              mediaRecorderIsRecording = true;\n            });\n            mediaRecorder.addEventListener('start', function () {\n              mediaRecorderUptimeOfLastStartResume = Date.now();\n              mediaRecorderDurationAlreadyRecorded = 0;\n              mediaRecorderIsRecording = true;\n            });\n            mediaRecorder.addEventListener('stop', function () {\n              mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n              mediaRecorderIsRecording = false;\n              stream.getTracks().forEach(function (track) {\n                return track.stop();\n              });\n            });\n            _context15.next = 14;\n            return _regeneratorRuntime.awrap(_this.getAudioRecordingStatus());\n          case 14:\n            _await$_this$getAudio = _context15.sent;\n            uri = _await$_this$getAudio.uri;\n            status = _objectWithoutProperties(_await$_this$getAudio, _excluded);\n            return _context15.abrupt(\"return\", {\n              uri: null,\n              status: status\n            });\n          case 18:\n          case \"end\":\n            return _context15.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  startAudioRecording: function startAudioRecording() {\n    var _this2 = this;\n    return function _callee15() {\n      return _regeneratorRuntime.async(function _callee15$(_context16) {\n        while (1) switch (_context16.prev = _context16.next) {\n          case 0:\n            if (!(mediaRecorder === null)) {\n              _context16.next = 2;\n              break;\n            }\n            throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');\n          case 2:\n            if (mediaRecorder.state === 'paused') {\n              mediaRecorder.resume();\n            } else {\n              mediaRecorder.start();\n            }\n            return _context16.abrupt(\"return\", _this2.getAudioRecordingStatus());\n          case 4:\n          case \"end\":\n            return _context16.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  pauseAudioRecording: function pauseAudioRecording() {\n    var _this3 = this;\n    return function _callee16() {\n      return _regeneratorRuntime.async(function _callee16$(_context17) {\n        while (1) switch (_context17.prev = _context17.next) {\n          case 0:\n            if (!(mediaRecorder === null)) {\n              _context17.next = 2;\n              break;\n            }\n            throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');\n          case 2:\n            mediaRecorder.pause();\n            return _context17.abrupt(\"return\", _this3.getAudioRecordingStatus());\n          case 4:\n          case \"end\":\n            return _context17.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  stopAudioRecording: function stopAudioRecording() {\n    var _this4 = this;\n    return function _callee17() {\n      var dataPromise, data, url;\n      return _regeneratorRuntime.async(function _callee17$(_context18) {\n        while (1) switch (_context18.prev = _context18.next) {\n          case 0:\n            if (!(mediaRecorder === null)) {\n              _context18.next = 2;\n              break;\n            }\n            throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');\n          case 2:\n            if (!(mediaRecorder.state === 'inactive')) {\n              _context18.next = 4;\n              break;\n            }\n            return _context18.abrupt(\"return\", _this4.getAudioRecordingStatus());\n          case 4:\n            dataPromise = new Promise(function (resolve) {\n              return mediaRecorder.addEventListener('dataavailable', function (e) {\n                return resolve(e.data);\n              });\n            });\n            mediaRecorder.stop();\n            _context18.next = 8;\n            return _regeneratorRuntime.awrap(dataPromise);\n          case 8:\n            data = _context18.sent;\n            url = URL.createObjectURL(data);\n            _context18.t0 = _objectSpread;\n            _context18.t1 = _objectSpread;\n            _context18.t2 = {};\n            _context18.next = 15;\n            return _regeneratorRuntime.awrap(_this4.getAudioRecordingStatus());\n          case 15:\n            _context18.t3 = _context18.sent;\n            _context18.t4 = (0, _context18.t1)(_context18.t2, _context18.t3);\n            _context18.t5 = {};\n            _context18.t6 = {\n              uri: url\n            };\n            return _context18.abrupt(\"return\", (0, _context18.t0)(_context18.t4, _context18.t5, _context18.t6));\n          case 20:\n          case \"end\":\n            return _context18.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  unloadAudioRecorder: function unloadAudioRecorder() {\n    return function _callee18() {\n      return _regeneratorRuntime.async(function _callee18$(_context19) {\n        while (1) switch (_context19.prev = _context19.next) {\n          case 0:\n            mediaRecorder = null;\n          case 1:\n          case \"end\":\n            return _context19.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getPermissionsAsync: function getPermissionsAsync() {\n    var _this5 = this;\n    return function _callee19() {\n      var maybeStatus;\n      return _regeneratorRuntime.async(function _callee19$(_context20) {\n        while (1) switch (_context20.prev = _context20.next) {\n          case 0:\n            _context20.next = 2;\n            return _regeneratorRuntime.awrap(getPermissionWithQueryAsync('microphone'));\n          case 2:\n            maybeStatus = _context20.sent;\n            _context20.t0 = maybeStatus;\n            _context20.next = _context20.t0 === PermissionStatus.GRANTED ? 6 : _context20.t0 === PermissionStatus.DENIED ? 7 : 8;\n            break;\n          case 6:\n            return _context20.abrupt(\"return\", {\n              status: PermissionStatus.GRANTED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: true\n            });\n          case 7:\n            return _context20.abrupt(\"return\", {\n              status: PermissionStatus.DENIED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: false\n            });\n          case 8:\n            _context20.next = 10;\n            return _regeneratorRuntime.awrap(_this5.requestPermissionsAsync());\n          case 10:\n            return _context20.abrupt(\"return\", _context20.sent);\n          case 11:\n          case \"end\":\n            return _context20.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  requestPermissionsAsync: function requestPermissionsAsync() {\n    return function _callee20() {\n      var stream;\n      return _regeneratorRuntime.async(function _callee20$(_context21) {\n        while (1) switch (_context21.prev = _context21.next) {\n          case 0:\n            _context21.prev = 0;\n            _context21.next = 3;\n            return _regeneratorRuntime.awrap(getUserMedia({\n              audio: true\n            }));\n          case 3:\n            stream = _context21.sent;\n            stream.getTracks().forEach(function (track) {\n              return track.stop();\n            });\n            return _context21.abrupt(\"return\", {\n              status: PermissionStatus.GRANTED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: true\n            });\n          case 8:\n            _context21.prev = 8;\n            _context21.t0 = _context21[\"catch\"](0);\n            return _context21.abrupt(\"return\", {\n              status: PermissionStatus.DENIED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: false\n            });\n          case 11:\n          case \"end\":\n            return _context21.stop();\n        }\n      }, null, null, [[0, 8]], Promise);\n    }();\n  }\n};","map":{"version":3,"names":["PermissionStatus","SyntheticPlatformEmitter","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","getPermissionWithQueryAsync","name","_await$navigator$perm","state","_regeneratorRuntime","async","getPermissionWithQueryAsync$","_context","prev","next","navigator","permissions","query","abrupt","awrap","sent","t0","GRANTED","DENIED","UNDETERMINED","t1","stop","Promise","getUserMedia","constraints","mediaDevices","webkitGetUserMedia","mozGetUserMedia","error","Error","code","resolve","reject","call","getStatusFromMedia","media","isLoaded","undefined","isPlaying","currentTime","paused","ended","readyState","status","uri","src","progressUpdateIntervalMillis","durationMillis","duration","positionMillis","shouldPlay","autoplay","isBuffering","rate","playbackRate","shouldCorrectPitch","volume","isMuted","muted","isLooping","loop","didJustFinish","setStatusForMedia","play","pause","mediaRecorder","mediaRecorderUptimeOfLastStartResume","mediaRecorderDurationAlreadyRecorded","mediaRecorderIsRecording","getAudioRecorderDurationMillis","Date","now","getStatusForVideo","element","_callee","_callee$","_context2","loadForVideo","nativeSource","fullInitialStatus","_callee2","_callee2$","_context3","unloadForVideo","_callee3","_callee3$","_context4","setStatusForVideo","_callee4","_callee4$","_context5","replayVideo","_callee5","_callee5$","_context6","setAudioMode","_callee6","_callee6$","_context7","setAudioIsEnabled","_callee7","_callee7$","_context8","getStatusForSound","_callee8","_callee8$","_context9","loadForSound","_callee9","source","_callee9$","_context10","Audio","ontimeupdate","emit","key","onerror","message","unloadForSound","_callee10","_callee10$","_context11","removeAttribute","load","setStatusForSound","_callee11","_callee11$","_context12","replaySound","_callee12","_callee12$","_context13","getAudioRecordingStatus","_callee13","_mediaRecorder","_mediaRecorder2","_mediaRecorder3","_callee13$","_context14","canRecord","isRecording","isDoneRecording","prepareAudioRecorder","options","_this","_callee14","stream","_await$_this$getAudio","_callee14$","_context15","audio","window","MediaRecorder","web","addEventListener","getTracks","forEach","track","_objectWithoutProperties","_excluded","startAudioRecording","_this2","_callee15","_callee15$","_context16","resume","start","pauseAudioRecording","_this3","_callee16","_callee16$","_context17","stopAudioRecording","_this4","_callee17","dataPromise","data","url","_callee17$","_context18","e","URL","createObjectURL","_objectSpread","t2","t3","t4","t5","t6","unloadAudioRecorder","_callee18","_callee18$","_context19","getPermissionsAsync","_this5","_callee19","maybeStatus","_callee19$","_context20","expires","canAskAgain","granted","requestPermissionsAsync","_callee20","_callee20$","_context21"],"sources":["C:\\Users\\Pc02\\Desktop\\Biscoito\\biscoito-da-sorte\\node_modules\\expo-av\\src\\ExponentAV.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus, SyntheticPlatformEmitter } from 'expo-modules-core';\n\nimport type { AVPlaybackNativeSource, AVPlaybackStatus, AVPlaybackStatusToSet } from './AV.types';\nimport type { RecordingStatus } from './Audio/Recording.types';\nimport { RECORDING_OPTIONS_PRESET_HIGH_QUALITY } from './Audio/RecordingConstants';\n\nasync function getPermissionWithQueryAsync(\n  name: PermissionNameWithAdditionalValues\n): Promise<PermissionStatus | null> {\n  if (!navigator || !navigator.permissions || !navigator.permissions.query) return null;\n\n  try {\n    const { state } = await navigator.permissions.query({ name });\n    switch (state) {\n      case 'granted':\n        return PermissionStatus.GRANTED;\n      case 'denied':\n        return PermissionStatus.DENIED;\n      default:\n        return PermissionStatus.UNDETERMINED;\n    }\n  } catch {\n    // Firefox - TypeError: 'microphone' (value of 'name' member of PermissionDescriptor) is not a valid value for enumeration PermissionName.\n    return PermissionStatus.UNDETERMINED;\n  }\n}\n\nfunction getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n\n  // First get ahold of the legacy getUserMedia, if present\n  const getUserMedia =\n    // TODO: this method is deprecated, migrate to https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    function () {\n      const error: any = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n\n  return new Promise((resolve, reject) => {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nfunction getStatusFromMedia(media?: HTMLMediaElement): AVPlaybackStatus {\n  if (!media) {\n    return {\n      isLoaded: false,\n      error: undefined,\n    };\n  }\n\n  const isPlaying = !!(\n    media.currentTime > 0 &&\n    !media.paused &&\n    !media.ended &&\n    media.readyState > 2\n  );\n\n  const status: AVPlaybackStatus = {\n    isLoaded: true,\n    uri: media.src,\n    progressUpdateIntervalMillis: 100, //TODO: Bacon: Add interval between calls\n    durationMillis: media.duration * 1000,\n    positionMillis: media.currentTime * 1000,\n    // playableDurationMillis: media.buffered * 1000,\n    // seekMillisToleranceBefore?: number\n    // seekMillisToleranceAfter?: number\n    shouldPlay: media.autoplay,\n    isPlaying,\n    isBuffering: false, //media.waiting,\n    rate: media.playbackRate,\n    // TODO: Bacon: This seems too complicated right now: https://webaudio.github.io/web-audio-api/#dom-biquadfilternode-frequency\n    shouldCorrectPitch: false,\n    volume: media.volume,\n    isMuted: media.muted,\n    isLooping: media.loop,\n    didJustFinish: media.ended,\n  };\n\n  return status;\n}\n\nfunction setStatusForMedia(\n  media: HTMLMediaElement,\n  status: AVPlaybackStatusToSet\n): AVPlaybackStatus {\n  if (status.positionMillis !== undefined) {\n    media.currentTime = status.positionMillis / 1000;\n  }\n  // if (status.progressUpdateIntervalMillis !== undefined) {\n  //   media.progressUpdateIntervalMillis = status.progressUpdateIntervalMillis;\n  // }\n  // if (status.seekMillisToleranceBefore !== undefined) {\n  //   media.seekMillisToleranceBefore = status.seekMillisToleranceBefore;\n  // }\n  // if (status.seekMillisToleranceAfter !== undefined) {\n  //   media.seekMillisToleranceAfter = status.seekMillisToleranceAfter;\n  // }\n  // if (status.shouldCorrectPitch !== undefined) {\n  //   media.shouldCorrectPitch = status.shouldCorrectPitch;\n  // }\n  if (status.shouldPlay !== undefined) {\n    if (status.shouldPlay) {\n      media.play();\n    } else {\n      media.pause();\n    }\n  }\n  if (status.rate !== undefined) {\n    media.playbackRate = status.rate;\n  }\n  if (status.volume !== undefined) {\n    media.volume = status.volume;\n  }\n  if (status.isMuted !== undefined) {\n    media.muted = status.isMuted;\n  }\n  if (status.isLooping !== undefined) {\n    media.loop = status.isLooping;\n  }\n\n  return getStatusFromMedia(media);\n}\n\nlet mediaRecorder: null | any /*MediaRecorder*/ = null;\nlet mediaRecorderUptimeOfLastStartResume: number = 0;\nlet mediaRecorderDurationAlreadyRecorded: number = 0;\nlet mediaRecorderIsRecording: boolean = false;\n\nfunction getAudioRecorderDurationMillis() {\n  let duration = mediaRecorderDurationAlreadyRecorded;\n  if (mediaRecorderIsRecording && mediaRecorderUptimeOfLastStartResume > 0) {\n    duration += Date.now() - mediaRecorderUptimeOfLastStartResume;\n  }\n  return duration;\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentAV';\n  },\n  async getStatusForVideo(element: HTMLMediaElement): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async loadForVideo(\n    element: HTMLMediaElement,\n    nativeSource: AVPlaybackNativeSource,\n    fullInitialStatus: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async unloadForVideo(element: HTMLMediaElement): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async setStatusForVideo(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  async replayVideo(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  /* Audio */\n  async setAudioMode() {},\n  async setAudioIsEnabled() {},\n  async getStatusForSound(element: HTMLMediaElement) {\n    return getStatusFromMedia(element);\n  },\n  async loadForSound(\n    nativeSource: string | { uri: string; [key: string]: any },\n    fullInitialStatus: AVPlaybackStatusToSet\n  ): Promise<[HTMLMediaElement, AVPlaybackStatus]> {\n    const source = typeof nativeSource === 'string' ? nativeSource : nativeSource.uri;\n    const media = new Audio(source);\n\n    media.ontimeupdate = () => {\n      SyntheticPlatformEmitter.emit('didUpdatePlaybackStatus', {\n        key: media,\n        status: getStatusFromMedia(media),\n      });\n    };\n\n    media.onerror = () => {\n      SyntheticPlatformEmitter.emit('ExponentAV.onError', {\n        key: media,\n        error: media.error!.message,\n      });\n    };\n\n    const status = setStatusForMedia(media, fullInitialStatus);\n\n    return [media, status];\n  },\n  async unloadForSound(element: HTMLMediaElement) {\n    element.pause();\n    element.removeAttribute('src');\n    element.load();\n    return getStatusFromMedia(element);\n  },\n  async setStatusForSound(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  async replaySound(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n\n  /* Recording */\n  //   async setUnloadedCallbackForAndroidRecording() {},\n  async getAudioRecordingStatus(): Promise<RecordingStatus> {\n    return {\n      canRecord: mediaRecorder?.state === 'recording' || mediaRecorder?.state === 'inactive',\n      isRecording: mediaRecorder?.state === 'recording',\n      isDoneRecording: false,\n      durationMillis: getAudioRecorderDurationMillis(),\n      uri: null,\n    };\n  },\n  async prepareAudioRecorder(options): Promise<{\n    uri: string | null;\n    // status is of type RecordingStatus, but without the canRecord field populated\n    status: Pick<RecordingStatus, Exclude<keyof RecordingStatus, 'canRecord'>>;\n  }> {\n    if (typeof navigator !== 'undefined' && !navigator.mediaDevices) {\n      throw new Error('No media devices available');\n    }\n\n    mediaRecorderUptimeOfLastStartResume = 0;\n    mediaRecorderDurationAlreadyRecorded = 0;\n\n    const stream = await getUserMedia({ audio: true });\n\n    mediaRecorder = new (window as any).MediaRecorder(\n      stream,\n      options?.web || RECORDING_OPTIONS_PRESET_HIGH_QUALITY.web\n    );\n\n    mediaRecorder.addEventListener('pause', () => {\n      mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n      mediaRecorderIsRecording = false;\n    });\n\n    mediaRecorder.addEventListener('resume', () => {\n      mediaRecorderUptimeOfLastStartResume = Date.now();\n      mediaRecorderIsRecording = true;\n    });\n\n    mediaRecorder.addEventListener('start', () => {\n      mediaRecorderUptimeOfLastStartResume = Date.now();\n      mediaRecorderDurationAlreadyRecorded = 0;\n      mediaRecorderIsRecording = true;\n    });\n\n    mediaRecorder.addEventListener('stop', () => {\n      mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n      mediaRecorderIsRecording = false;\n\n      // Clears recording icon in Chrome tab\n      stream.getTracks().forEach((track) => track.stop());\n    });\n\n    const { uri, ...status } = await this.getAudioRecordingStatus();\n\n    return { uri: null, status };\n  },\n  async startAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    if (mediaRecorder.state === 'paused') {\n      mediaRecorder.resume();\n    } else {\n      mediaRecorder.start();\n    }\n\n    return this.getAudioRecordingStatus();\n  },\n  async pauseAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    // Set status to paused\n    mediaRecorder.pause();\n\n    return this.getAudioRecordingStatus();\n  },\n  async stopAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    if (mediaRecorder.state === 'inactive') {\n      return this.getAudioRecordingStatus();\n    }\n\n    const dataPromise = new Promise<Blob>((resolve) =>\n      mediaRecorder.addEventListener('dataavailable', (e) => resolve(e.data))\n    );\n\n    mediaRecorder.stop();\n\n    const data = await dataPromise;\n    const url = URL.createObjectURL(data);\n\n    return {\n      ...(await this.getAudioRecordingStatus()),\n      uri: url,\n    };\n  },\n  async unloadAudioRecorder(): Promise<void> {\n    mediaRecorder = null;\n  },\n\n  async getPermissionsAsync(): Promise<PermissionResponse> {\n    const maybeStatus = await getPermissionWithQueryAsync('microphone');\n    switch (maybeStatus) {\n      case PermissionStatus.GRANTED:\n        return {\n          status: PermissionStatus.GRANTED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: true,\n        };\n      case PermissionStatus.DENIED:\n        return {\n          status: PermissionStatus.DENIED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false,\n        };\n      default:\n        return await this.requestPermissionsAsync();\n    }\n  },\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\n    try {\n      const stream = await getUserMedia({ audio: true });\n      stream.getTracks().forEach((track) => track.stop());\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: true,\n      };\n    } catch {\n      return {\n        status: PermissionStatus.DENIED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false,\n      };\n    }\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}